name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # Add caching for pip dependencies
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install nltk==3.6.2
        pip install -r ./fastapi/requirements.txt
        pip install -r ./streamlit/requirements.txt
        python -c "import nltk; nltk.download('punkt')"

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics

    - name: Run tests with coverage
      run: |
        pip install pytest pytest-cov
        cd fastapi
        pytest --cov=./ --cov-report=xml
        cd ../streamlit
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./fastapi/coverage.xml,./streamlit/coverage.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    
    steps:
    - uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push FastAPI image
      uses: docker/build-push-action@v4
      with:
        context: ./fastapi
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/fastapi:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Build and push Streamlit image
      uses: docker/build-push-action@v4
      with:
        context: ./streamlit
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/streamlit:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /path/to/project
          docker-compose pull
          docker-compose up -d --remove-orphans

    - # Cleanup cache
      name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache